en:
  models: "Models"
  add_model: "Add Model"
  new_model: "New Model"
  edit_model: "Edit Model"
  update_model: "Update Model"
  add_entry: "Add Entry"
  new_entry: "New Entry"
  edit_entry: "Edit Entry"
  update_entry: "Update Entry"
  no_fields_yet: "No fields yet. Add first field using form below."
  select_field_type: "Select field type"
  select_model: "Select Model"
  collection_name_field_hint: "You can access model collection like this: models.your_collection_name (ex., models.services)"
  description_field_hint: "Optional field. Just write some description so everyone would be aware what's the purpose of this Model"
  label_field_hint: "Add at least one Field below. And then you could choose one that would be used for item permalink generation and entries list displaying"
  allow_creation_using_form_field_hint: "On website you can place a form allowing to create model entries"
  has_many_field_placeholder: "Select related objects..."
  belongs_to_field_placeholder: "Select related object..."
  models_description: "Models are where you organize your content (basically dynamic) like 'News', 'Blog', 'Services' and etc."
  create_first_model: "Create first model"
  entries_description: "Here you would create content for corresponding Model"
  create_first_entry: "Create first entry"
  field_types:
    string: "String"
    text: "Text"
    checkbox: "Checkbox"
    date: "Date"
    file: "File"
    has_many: "Has many"
    belongs_to: "Belongs to"
  liquor_help:
    variables:
      models:
        main_description: 'Variable "models" gives access to models collections of entries. You can access collection using model collection name - "Collection name (for Liquor)" field. For example, if you created some Model with "services" collection name, then you could iterate its collection using "for" tag like this:'
    endpoints:
      entries:
        post:
          main_description: This endpoint allows you to setup form submitting Model's elements. For example, if you have a model with collection name "posts" (and field with "title" Liquor name), you could create a form with action="/entries/posts" and an input with name="entry[title]"
          parameters:
            entry: Value of each parameter will be saved to corresponding Model's entry field

  activerecord:
    models:
      kms/model:
        one: "Model"
        few: "Models"
        many: "Models"
        other: "Models"
      kms/entry:
        one: "Entry"
        few: "Entries"
        many: "Entries"
        other: "Entries"
    attributes:
      kms/model:
        kms_model_name: "Name"
        collection_name: "Collection name (for Liquor)"
        description: "Description"
        fields: "Fields"
        label_field: "Label field (used for URL/slug generating)"
        allow_creation_using_form: "Allow creation using form"
      kms/field:
        name: "Name"
        liquor_name: "Name for Liquor"
        type: "Type"
        required: "Required"
      kms/entry:
        slug: "Slug"
