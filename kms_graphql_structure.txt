Examples for Query and Mutation:
================================

query allCollectionsQuery {
  allCollections {
    id
    collection_name
    kms_model_name
    fields {
      id
      name
      liquor_name
      type
      class_name
    }
  }
}

query singleCollectionQuery {
  singleCollection(collection_name: "sport_teams") {
    id
    kms_model_name
    collection_name
    fields {
      id
      name
      liquor_name
      type
      class_name
    }
  }
}

query singleCollectionAllEntriesQuery {
  singleCollectionAllEntries(collection_name: "car_brands") {
    id
    collection_name
    values
  }
}

query singleCollectionSingleEntryQuery {
  singleCollectionSingleEntry(collection_name: "cars", id: 18) {
    id
    collection_name
    values
  }
}

mutation createCollectionMutation {
  createCollection(input: {
    kms_model_name: "Team",
    collection_name: "teams",
    description: "Teams Model",
    label_field: "name",
    fields_attributes: [
      {
        name: "Name",
        liquor_name: "name",
        type: "Kms::StringField"
      },
      {
        name: "Origin Country Code",
        liquor_name: "origin_country_code",
        type: "Kms::StringField"
      },
      {
        name: "Sport",
        liquor_name: "sport_id",
        type: "Kms::BelongsToField",
        class_name: "7"
      },
      {
        name: "Players",
        liquor_name: "players",
        type: "Kms::HasManyField",
        class_name: "1"
      }
    ]
  }) {
    collection {
      id
      collection_name
      kms_model_name
      fields {
        id
        liquor_name
        type
        name
        class_name
      }
    }
    errors
  }
}

mutation updateCollectionMutation {
  updateCollection(input: {
    search_collection_name: "teams",
    kms_model_name: "Sport Team",
    collection_name: "sport_teams",
    description: "Sport Teams Model",
    label_field: "name",
    fields_attributes: [
      {
        id: 49,
        name: "Name",
        liquor_name: "name",
        type: "Kms::StringField",
        # _destroy: "1"
      },
      {
        id: 50,
        name: "Origin Country Code",
        liquor_name: "origin_country_code",
        type: "Kms::StringField",
        # _destroy: "1"
      },
      {
        id: 51,
        name: "Sport",
        liquor_name: "sport_id",
        type: "Kms::BelongsToField",
        class_name: "7",
        # _destroy: "1"
      },
      {
        id: 52,
        name: "Players",
        liquor_name: "players",
        type: "Kms::HasManyField",
        class_name: "1",
        # _destroy: "1"
      }
    ]
  }) {
    collection {
      id
      collection_name
      kms_model_name
      fields {
        id
        liquor_name
        type
        name
        class_name
      }
    }
    errors
  }
}

mutation deleteCollectionMutation {
  deleteCollection(input: {
    collection_name: "teams"
  }) {
    collection {
      id
      collection_name
      kms_model_name
    }
    errors
  }
}

mutation deleteAllCollectionsMutation {
  deleteCollections(input: {}){
    status
    errors
  }
}

mutation createEntryMutation {
  createEntry(input: {
    collection_name: "cars",
    values: [
      ["name", "BMW 760Li xDrive V12 Excellence"]
      ["brand", "3"],
      ["price", "2Cr"],
      ["user", "2"]
    ]
  }) {
    entry {
      id
      slug
      collection_name
      values
    }
    errors
  }
}

mutation updateEntryMutation {
  updateEntry(input: {
    slug: "bmw-760li-xdrive-v12-excellence"
    collection_name: "cars",
    values: [
      ["price", "2.1Cr"]
    ]
  }) {
    entry {
      id
      slug
      collection_name
      values
    }
    errors
  }
}

mutation deleteEntryMutation {
  deleteEntry(input: {
    slug: "bmw-760li-xdrive-v12-excellence"
    collection_name: "cars"
  }) {
    entry {
      id
      slug
      collection_name
    }
    errors
  }
}

mutation deleteAllEntriesMutation {
  deleteAllEntries(input: {
    collection_name: "sport_teams"
  }) {
    collection_name
    entries {
      id
      values
    }
    errors
  }
}
